name: MSBuild

on:
  push:
    branches: [ "Ci" ]
  pull_request:
    branches: [ "Ci" ]

env:
  DEVENV_PATH: C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\IDE
  DEVENV_PATH2: C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\IDE\devenv.com
  QTMSBUILD_PATH: ${{ github.workspace }}  # Path to the root of the repository

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
    
    - name: Check out the main project repository
      uses: actions/checkout@v4
      with:
        repository: OT-OpenTwin/OpenTwin
        ref: Test
        path: OpenTwin



    - name: Install Rust 1.76.0
      run: |
        choco install rust --version=1.76.0 -y
      shell: cmd

    - name: Add Visual Studio to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Debug - List repository files
      run: dir /s
      shell: cmd

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install Yarn
      run: npm install -g yarn

    - name: Install dependencies
      run: yarn install

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install Sphinx and dependencies
      run: |
        python -m pip install --upgrade pip
        pip install sphinx sphinx-rtd-theme
    - name: Install Visual Studio 2022 Community
      run: |
        choco install visualstudio2022community --package-parameters "--installPath C:\VS2022 --add Microsoft.VisualStudio.Workload.ManagedDesktop --add Microsoft.VisualStudio.Workload.NetWeb --includeRecommended" -y
    
    - name: Add MSBuild to PATH
      run: |
        echo 'C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Current\Bin' | Out-File -Append -FilePath $env:GITHUB_PATH
    # Step 5: Print PATH variable
    - name: Print PATH variable
      run: |
        echo $env:Path
    # Step 6: Check directory contents
    - name: Check directory contents
      run: |
        $msbuildDir = 'C:\VS2022\Common7\IDE' 
        if (Test-Path $msbuildDir) {
          Get-ChildItem -Path $msbuildDir
        } else {
          Write-Output "MSBuild directory not found at $msbuildDir"
          exit 1
        }
      shell: pwsh

    - name: Set up Visual Studio environment
      shell: cmd
      run: |
        "C:\VS2022\Common7\Tools\VsDevCmd.bat"



    - name: Setup and Execute Build
      shell: cmd
      run: |
        echo "Current directory: %cd%"
        set OPENTWIN_DEV_ROOT=%cd%\OpenTwin
        set DEVENV_ROOT_2022=C:\VS2022\Common7\IDE
        set OPENTWIN_THIRDPARTY_ROOT=%cd%
        set QtMsBuild=%cd%\OpenTwin\QtMsBuild
        echo "Starting BuildAll.bat..."
        call %OPENTWIN_DEV_ROOT%\Scripts\BuildAndTest\BuildAll.bat 

    - name: Upload build log summary artifact
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: build-log-Debug
        path: ${{ github.workspace }}\OpenTwin\Scripts\BuildAndTest\buildLog_Debug.txt

    - name: Upload build log summary artifact
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: build-log-Release
        path: ${{ github.workspace }}\OpenTwin\Scripts\BuildAndTest\buildLog_Release.txt

    - name: Upload build log summary artifact
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: build-log-summary
        path: ${{ github.workspace }}\OpenTwin\Scripts\BuildAndTest\buildLog_Summary.txt
