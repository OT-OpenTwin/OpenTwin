name: MSBuild

on:
  push:
    branches: [ "Test" ]
  pull_request:
    branches: [ "Test" ]

env:
  DEVENV_PATH: C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\IDE
  DEVENV_PATH2: C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\IDE\devenv.com
  QTMSBUILD_PATH: ${{ github.workspace }}  # Path to the root of the repository

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
    
    - name: Check out the main project repository
      uses: actions/checkout@v4
      with:
        repository: OT-OpenTwin/OpenTwin
        ref: Test
        path: OpenTwin

    - name: Check out the third-party repository
      uses: actions/checkout@v4
      with:
        repository: OT-OpenTwin/ThirdParty
        path: ThirdParty

    - name: Check out QtMsBuild repository
      uses: actions/checkout@v4
      with:
        repository: Reeva30/HelloWorld
        ref: m
        path: HelloWorld

    - name: Install Rust 1.76.0
      run: |
        choco install rust --version=1.76.0 -y
      shell: cmd

    - name: Add Visual Studio to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Debug - List repository files
      run: dir /s
      shell: cmd

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install Yarn
      run: npm install -g yarn

    - name: Install dependencies
      run: yarn install

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install Sphinx and dependencies
      run: |
        python -m pip install --upgrade pip
        pip install sphinx sphinx-rtd-theme

    - name: Setup and Execute Build
      shell: cmd
      run: |
        echo "Current directory: %cd%"
        set OPENTWIN_DEV_ROOT=%cd%\OpenTwin
        set DEVENV_ROOT_2022=%DEVENV_PATH%
        set OPENTWIN_THIRDPARTY_ROOT=%cd%\ThirdParty
        set QtMsBuild=%QTMSBUILD_PATH%\HelloWorld\QtMsBuild
        echo "OPENTWIN_DEV_ROOT=%OPENTWIN_DEV_ROOT%"
        echo "DEVENV_ROOT_2022=%DEVENV_ROOT_2022%"
        echo "OPENTWIN_THIRDPARTY_ROOT=%OPENTWIN_THIRDPARTY_ROOT%"
        echo "QtMsBuild=%QtMsBuild%"
        echo "Checking directories and necessary files..."
        echo "OpenTwin directory: %OPENTWIN_DEV_ROOT%"
        dir %OPENTWIN_DEV_ROOT%
        echo "ThirdParty directory: %OPENTWIN_THIRDPARTY_ROOT%"
        dir %OPENTWIN_THIRDPARTY_ROOT%
        echo "Visual Studio 2022 directory: %DEVENV_ROOT_2022%"
        dir "%DEVENV_ROOT_2022%"
        echo "QtMsBuild directory: %QtMsBuild%"
        dir "%QtMsBuild%"
        echo "Checking if BuildAll.bat exists..."
        echo "Starting BuildAll.bat..."
        call %OPENTWIN_DEV_ROOT%\Scripts\BuildAndTest\BuildAll.bat 
        echo "All checks passed."

    - name: Upload build log summary artifact
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: build-log-Debug
        path: ${{ github.workspace }}\OpenTwin\Scripts\BuildAndTest\buildLog_Debug.txt

    - name: Upload build log summary artifact
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: build-log-Release
        path: ${{ github.workspace }}\OpenTwin\Scripts\BuildAndTest\buildLog_Release.txt

    - name: Upload build log summary artifact
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: build-log-summary
        path: ${{ github.workspace }}\OpenTwin\Scripts\BuildAndTest\buildLog_Summary.txt
