//! @file CartesianPlotCurve.h
//! @author Alexander Kuester (alexk95)
//! @date June 2025
// ###########################################################################################################################################################################################################################################################################################################################

#pragma once

// OpenTwin header
#include "OTWidgets/OTWidgetsAPIExport.h"

// Qwt header
#include <qwt_plot_curve.h>

// Qt header
#include <QtGui/qpen.h>

namespace ot {

	class OT_WIDGETS_API_EXPORT CartesianPlotCurve : public QwtPlotCurve {
	public:
		static int verifyRange(int _size, int& _i1, int& _i2);

		// ###########################################################################################################################################################################################################################################################################################################################

		// Constructor

		CartesianPlotCurve(const QString& _title = QString());

		// ###########################################################################################################################################################################################################################################################################################################################

		// Virtual methods

		virtual void drawSeries(QPainter* _painter, const QwtScaleMap& _xMap, const QwtScaleMap& _yMap, const QRectF& _canvasRect, int _from, int _to) const override;

		// ###########################################################################################################################################################################################################################################################################################################################

		// Setter / Getter

		void setOutlinePen(const QPen& _pen) { m_outlinePen = _pen; };
		const QPen& getOutlinePen() const { return m_outlinePen; };

	private:
		QPen m_outlinePen;
	};

}